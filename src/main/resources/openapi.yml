openapi: 3.0.0
info:
  title: TriReservas API
  description: |-
    TriReservas es una aplicación web para la gestión de alojamientos y reservas, con roles diferenciados para 
    usuarios y anfitriones. Desarrollada con Spring Boot, JPA y Angular, ofrece una solución moderna y eficiente para la
    administración de estancias.
    
    Requisitos Funcionales:
    * [Aquí](https://docs.google.com/spreadsheets/d/14pBo766cm17JRFVoYanh_tZuF3VmeBVc5iNh8Avp4dE/edit?usp=sharing) podrá 
    encontrar un apoyo en hojas de cálculo para la identificación de requisitos funcionales y el progreso del proyecto.

    Autores: 
    * Juan Sebastián Londoño Ramírez [github](https://github.com/Juan3bitas)
    * Angie Carolina Grajales Giraldo [github](https://github.com/angiec-grajalesg)
    * Juan Diego García Nieto [github](https://github.com/Juan-Devgo)
  version: 1.0.0
  license:
    name: GNU General Public License v3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
tags:
  - name: Auth
    description: Operaciones relacionadas con autenticación y autorización
  - name: User
    description: Operaciones relacionadas con usuarios
  - name: Lodging
    description: Operaciones relacionadas con alojamientos
  - name: Reservation
    description: Operaciones relacionadas con reservas
servers:
  - url: http://localhost:8080
    description: Servidor local de desarrollo
paths:
  /api/users:
    get:
      tags:
        - User
      summary: Obtener todos los usuarios
      description: Obtiene una lista de todos los usuarios registrados en el sistema.
      operationId: getUsers
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "getUsers401", message: "No está autorizado para ver la lista de usuarios."}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "getUsers403", message: "No tiene permisos para ver la lista de usuarios."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-01", message: "Error inesperado al tratar de obtener los usuarios."}
      security:
        - bearerAuth: []
  /api/users/{user_uuid}:
    patch:
      tags:
        - User
      summary: Actualizar información de un usuario
      description: Actualiza la información de un usuario específico identificado por su UUID, cumpliendo con el requisito REQ-RYA-U-02.
      operationId: updateUser
      parameters:
        - name: user_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del usuario que se desea actualizar.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateDTO'
      responses:
        '200':
          description: Usuario actualizado satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Usuario actualizado satisfactoriamente."
        '400':
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                default: {code: "GTU04-GTU05-1", message: "Error en la solicitud al tratar de actualizar un usuario."}
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "GTU04-GTU05-2", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "GTU04-GTU05-3", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                default: {code: "GTU04-GTU05-4", message: "No se encontró el usuario especificado para actualizar."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-02", message: "Error inesperado al tratar de actualizar el usuario."}
      security:
        - bearerAuth: []
  /api/users/{user_uuid}/favorites:
    get:
      tags:
        - User
      summary: Obtener alojamientos favoritos de un usuario
      description: Obtiene una lista de alojamientos marcados como favoritos por un usuario específico.
      operationId: getUserFavorites
      parameters:
        - name: user_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del usuario cuyos alojamientos favoritos se desean obtener.
      responses:
        '200':
          description: Alojamientos favoritos obtenidos satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Alojamientos favoritos obtenidos satisfactoriamente."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "OPC10-1", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "OPC10-2", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                default: {code: "RYA04-3", message: "No se encontró el usuario especificado para obtener sus alojamientos favoritos."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-03", message: "Error inesperado al tratar de obtener los alojamientos favoritos."}
      security:
        - bearerAuth: []
  /api/users/{user_uuid}/recommendations:
    get:
      tags:
        - User
      summary: Obtener recomendaciones de alojamientos para un usuario
      description: Obtiene una lista de alojamientos recomendados para un usuario específico, basándose en sus preferencias y comportamiento.
      operationId: getUserRecommendations
      parameters:
        - name: user_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del usuario para el cual se desean obtener las recomendaciones de alojamientos.
      responses:
        '200':
          description: Lista de alojamientos recomendados obtenida satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Alojamientos recomendados obtenidos satisfactoriamente."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "OPC10-1", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "OPC10-2", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                default: {code: "OPC10-3", message: "No se encontró el usuario especificado para obtener sus recomendaciones."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-04", message: "Error inesperado al tratar de obtener las recomendaciones."}
      security:
        - bearerAuth: []
  /api/auth/user/register:
    post:
      tags:
        - Auth
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario en el sistema, cumpliendo con el requisito REQ-RYA-U-01 y REQ-RYA-A-08.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '201':
          description: Usuario creado satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Usuario creado satisfactoriamente."
        '400':
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                default: {code: "RYA01-1", message: "Error en la solicitud al tratar de crear un usuario."}
        '409':
          description: Conflicto - Usuario ya existe.
          content:
            application/json:
              schema:
                default: {code: "RYA01-2", message: "El usuario ya se encuentra registrado."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-05", message: "Error inesperado al tratar de crear un usuario."}
  /api/users/{user_uuid}/password:
    patch:
      tags:
        - User
      summary: Cambiar la contraseña de un usuario
      description: Permite a un usuario cambiar su contraseña actual, cumpliendo con el requisito REQ-GTU-06 y REQ-GTU-07.
      operationId: updateUserPassword
      parameters:
        - name: user_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del usuario que desea cambiar su contraseña.
      responses:
        '200':
          description: Contraseña restablecida satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Contraseña restablecida satisfactoriamente."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "GTU06-GTU07-1", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "GTU06-GTU07-2", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '422':
          description: Error de validación
          content:
            application/json:
              schema:
                default: {code: "GTU06-GTU07-3", message: "El código o la contraseña actual enviada no coincide."}
      security:
        - bearerAuth: []
  /api/auth/user/login/{mode}:
    post:
      tags:
        - Auth
      summary: Autenticar usuario y obtener token JWT
      description: Autentica un usuario y genera un token JWT para la autenticación en futuras solicitudes, cumpliendo con el requisito REQ-RYA-U-01 y REQ-RYA-A-08.
      operationId: loginUser
      parameters:
        - name: mode
          in: path
          required: true
          description: Modo de autenticación, puede ser por 'email' o 'phone'.
          schema:
            type: string
            enum: [email, phone]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginDTO'
      responses:
        '200':
          description: Autenticación exitosa, token JWT generado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token JWT para autenticación
        '400':
          description: Credenciales inválidas.
          content:
            application/json:
              schema:
                default: {code: "RYA01-1", message: "Error en la solitud al tratar de iniciar sesión."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-06", message: "Error inesperado al tratar de iniciar sesión."}
  /api/auth/host/register:
    post:
      tags:
        - Auth
      summary: Crear un nuevo anfitrión
      description: Crea un nuevo anfitrión en el sistema, cumpliendo con el requisito REQ-RYA-H-01 y REQ-RYA-A-08.
      operationId: createHost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '201':
          description: Anfitrión creado satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Anfitrión creado satisfactoriamente."
        '400':
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                default: {code: "RYA08-1", message: "Error en la solicitud al tratar de crear un anfitrión."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-07", message: "Error inesperado al tratar de crear un anfitrión."}
  /api/auth/host/login/{mode}:
    post:
      tags:
        - Auth
      summary: Autenticar anfitrión y obtener token JWT
      description: Autentica un anfitrión y genera un token JWT para la autenticación en futuras solicitudes, cumpliendo con el requisito REQ-RYA-H-01 y REQ-RYA-A-08.
      operationId: loginHost
      parameters:
        - name: mode
          in: path
          required: true
          description: Modo de autenticación, puede ser por 'email' o 'phone'.
          schema:
            type: string
            enum: [ email, phone ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginDTO'
      responses:
        '200':
          description: Autenticación exitosa, token JWT generado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token JWT para autenticación
        '400':
          description: Credenciales inválidas.
          content:
            application/json:
              schema:
                default: {code: "RYA08-2", message: "Error en la solitud al tratar de iniciar sesión."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-08", message: "Error inesperado al tratar de iniciar sesión."}
  /api/auth/reset_password:
    post:
      tags:
        - Auth
      summary: Solicitar restablecimiento de contraseña
      description: Envía un correo electrónico con un enlace para restablecer la contraseña del usuario, cumpliendo con el requisito REQ-RYA-A-09.
      operationId: requestPasswordReset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
      responses:
        '200':
          description: Solicitud de restablecimiento de contraseña enviada satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Solicitud de restablecimiento de contraseña enviada satisfactoriamente."
        '400':
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                default: {code: "GTU06-1", message: "Error en la solicitud al tratar de solicitar el restablecimiento de contraseña."}
        '404':
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                default: {code: "GTU06-2", message: "No se encontró el usuario especificado para solicitar el restablecimiento de contraseña."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-09", message: "Error inesperado al tratar de solicitar el restablecimiento de contraseña."}
  /api/lodgings:
    get:
      tags:
        - Lodging
      summary: Obtener todos los alojamientos
      description: Obtiene una lista de todos los alojamientos disponibles en el sistema.
      operationId: getLodgings
      parameters:
        - name: city
          in: query
          required: false
          schema:
            type: string
          description: Filtrar alojamientos por ciudad
        - name: minPrice
          in: query
          required: false
          schema:
            type: number
            format: float
          description: Filtrar alojamientos por precio mínimo
        - name: maxPrice
          in: query
          required: false
          schema:
            type: number
            format: float
          description: Filtrar alojamientos por precio máximo
        - name: checkIn
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Filtrar alojamientos por fecha de entrada (check-in) en formato AAAA-MM-DD
        - name: checkOut
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Filtrar alojamientos por fecha de salida (check-out) en formato AAAA-MM-DD
      responses:
        '200':
          description: Alojamientos obtenidos satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Alojamientos obtenidos satisfactoriamente."
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-10", message: "Error inesperado al tratar de obtener los alojamientos."}
    post:
      tags:
        - Lodging
      summary: Crear un nuevo alojamiento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LodgingDTO'
      responses:
        '201':
          description: Alojamiento creado satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Alojamiento creado satisfactoriamente."
        '400':
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                default: {code: "RYA10-1", message: "Error en la solicitud al crear un alojamiento."}
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "RYA10-2", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "RYA10-3", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '409':
          description: Conflicto - Alojamiento ya existe.
          content:
            application/json:
              schema:
                default: {code: "RYA10-4", message: "El alojamiento ya se encuentra registrado."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-11", message: "Error inesperado al tratar de crear un alojamiento."}
      security:
        - bearerAuth: []
    put:
      tags:
        - Lodging
      summary: Actualizar un alojamiento existente
      description: Actualiza los detalles de un alojamiento existente identificado por su UUID.
      operationId: updateLodging
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LodgingDTO'
      responses:
        '200':
          description: Alojamiento actualizado satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Alojamiento actualizado satisfactoriamente."
        '400':
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                default: {code: "RYA10-5", message: "Error en la solicitud al actualizar un alojamiento."}
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "RYA10-6", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "RYA10-7", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Alojamiento no encontrado.
          content:
            application/json:
              schema:
                default: {code: "RYA10-8", message: "No se encontró el alojamiento especificado para actualizar."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-12", message: "Error inesperado al tratar de actualizar el alojamiento."}
      security:
        - bearerAuth: []
  /api/lodgings/{lodging_uuid}:
    delete:
      tags:
        - Lodging
      summary: Eliminar un alojamiento existente (soft delete)
      description: Elimina un alojamiento existente identificado por su UUID de manera suave, cambiándole el estado a "DELETED".
      operationId: softDeleteLodging
      parameters:
        - name: lodging_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del alojamiento que se desea cambiarle el estado a "DELETED".
      responses:
        '200':
          description: Alojamiento cambiado de estado a "DELETED" satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Alojamiento eliminado satisfactoriamente."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "RYA11-1", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "RYA11-2", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Alojamiento no encontrado.
          content:
            application/json:
              schema:
                default: {code: "RYA11-3", message: "No se encontró el alojamiento especificado para eliminar."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-13", message: "Error inesperado al tratar de eliminar el alojamiento."}
      security:
        - bearerAuth: []
  /api/lodgings/{search}:
    get:
      tags:
        - Lodging
      summary: Buscar alojamientos por nombre o descripción
      description: Busca alojamientos cuyo nombre o descripción contengan el término de búsqueda proporcionado, cumpliendo con el requisito REQ-BQA-01 y REQ-BQA-04.
      operationId: searchLodgings
      parameters:
        - name: search
          in: path
          required: true
          schema:
            type: string
          description: Término de búsqueda para filtrar alojamientos por nombre o descripción.
      responses:
        '200':
          description: Alojamientos encontrados satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Alojamientos encontrados satisfactoriamente."
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-14", message: "Error inesperado al tratar de buscar los alojamientos."}
  /api/lodgings/{lodging_uuid}/metrics:
    get:
      tags:
        - Lodging
      summary: Obtener métricas de un alojamiento específico
      description: Obtiene métricas como número de reservas y valoración promedio para un alojamiento específico.
      operationId: getLodgingMetrics
      parameters:
        - name: lodging_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del alojamiento para el cual se están obteniendo las métricas.
      responses:
        '200':
          description: Métricas obtenidas satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Métricas obtenidas satisfactoriamente."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "RYA12-1", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "RYA12-2", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Alojamiento no encontrado.
          content:
            application/json:
              schema:
                default: {code: "RYA12-3", message: "No se encontró el alojamiento especificado para obtener sus métricas."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-15", message: "Error inesperado al tratar de obtener las métricas."}
      security:
        - bearerAuth: []
  /api/lodgings/{host_uuid}:
    get:
      tags:
        - Lodging
      summary: Obtener alojamientos de un anfitrión específico
      description: Obtiene una lista de alojamientos asociados a un anfitrión específico.
      operationId: getLodgingsByHost
      parameters:
        - name: host_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del anfitrión para el cual se están obteniendo los alojamientos.
      responses:
        '200':
          description: Alojamientos obtenidos satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Alojamientos obtenidos satisfactoriamente."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "RYA09-1", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "RYA09-2", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Anfitrión no encontrado.
          content:
            application/json:
              schema:
                default: {code: "RYA09-3", message: "No se ha encontrado el anfitrión especificado para los alojamientos."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-16", message: "Error inesperado al tratar de obtener los alojamientos."}
      security:
        - bearerAuth: []
  /api/lodgings/{lodging_uuid}/comments:
    patch:
      tags:
        - Lodging
      summary: Agregar un comentario a un alojamiento
      description: Permite a un usuario agregar un comentario y una valoración a un alojamiento específico.
      operationId: addCommentToLodging
      parameters:
        - name: lodging_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del alojamiento al que se le va a agregar el comentario.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userUUID:
                  type: string
                  format: uuid
                comment:
                  type: string
                valuation:
                  type: integer
                  format: float
              required:
                - userUuid
                - comment
                - valuation
      responses:
        '201':
          description: Comentario agregado satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Comentario agregado satisfactoriamente."
        '400':
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                default: {code: "RYA05-1", message: "Error en la solicitud al tratar de agregar un comentario."}
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "RYA05-2", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "RYA05-3", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Alojamiento no encontrado.
          content:
            application/json:
              schema:
                default: {code: "RYA05-4", message: "No se encontró el alojamiento especificado para agregar el comentario."}
        '409':
          description: Conflicto - Comentario ya existe.
          content:
            application/json:
              schema:
                default: {code: "RYA05-5", message: "Usted ya ha comentado en este alojamiento."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-17", message: "Error inesperado al tratar de agregar el comentario."}
      security:
        - bearerAuth: []
  /api/lodgings/{lodging_uuid}/comments/{user_uuid}/host_response:
    patch:
      tags:
        - Lodging
      summary: Responder a un comentario de un alojamiento
      description: Permite a un anfitrión responder a un comentario realizado en uno de sus alojamientos.
      operationId: respondToComment
      parameters:
        - name: lodging_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del alojamiento al que pertenece el comentario.
        - name: user_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del usuario que realizó el comentario.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: Respuesta al comentario agregada satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Respuesta al comentario agregada satisfactoriamente."
        '400':
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                default: {code: "RYA07-1", message: "Error en la solicitud al tratar de responder a un comentario."}
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "RYA07-2", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "RYA07-3", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Alojamiento o comentario no encontrado.
          content:
            application/json:
              schema:
                default: {code: "RYA07-4", message: "No se encontró el alojamiento o el comentario especificado para agregar la respuesta."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-18", message: "Error inesperado al tratar de agregar la respuesta al comentario."}
      security:
        - bearerAuth: []
  /api/reservations/{lodging_uuid}:
    get:
      tags:
        - Reservation
      summary: Obtener reservas de un alojamiento específico
      description: Obtiene una lista de reservas asociadas a un alojamiento específico.
      operationId: getReservationsByLodging
      parameters:
        - name: lodging_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del alojamiento para el cual se están obteniendo las reservas.
        - name: state
          in: query
          required: false
          schema:
            type: string
            enum: [PENDING, CONFIRMED, CANCELLED, COMPLETED]
          description: Filtrar reservas por estado (PENDING, CONFIRMED, CANCELLED, COMPLETED)
        - name: checkIn
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Filtrar reservas por fecha de inicio (check-in) en formato AAAA-MM-DD
        - name: checkOut
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Filtrar reservas por fecha de fin (check-out) en formato AAAA-MM-DD
      responses:
        '200':
          description: Reservas obtenidas satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Reservas obtenidas satisfactoriamente."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "RYA13-1", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "RYA13-2", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Alojamiento no encontrado.
          content:
            application/json:
              schema:
                default: {code: "RYA13", message: "No se encontró el alojamiento especificado para la reserva."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-19", message: "Error inesperado al tratar de obtener las reservas."}
      security:
        - bearerAuth: []
    post:
      tags:
        - Reservation
      summary: Crear una nueva reserva
      description: Crea una nueva reserva para un alojamiento específico.
      operationId: createReservation
      parameters:
        - name: lodging_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del alojamiento para el cual se está creando la reserva.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationDTO'
      responses:
        '201':
          description: Reserva creada satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Reserva creada satisfactoriamente."
        '400':
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                default: {code: "RYA03-1", message: "Error en la solicitud al crear una reserva."}
        '404':
          description: Alojamiento no encontrado.
          content:
            application/json:
              schema:
                default: {code: "RYA03-2", message: "No se encontró el alojamiento especificado para la reserva."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-20", message: "Error inesperado al tratar de crear una reserva."}
      security:
        - bearerAuth: []
  /api/reservations/{user_uuid}:
    get:
      tags:
        - Reservation
      summary: Obtener reservas de un usuario específico
      description: Obtiene una lista de reservas asociadas a un usuario específico.
      operationId: getReservationsByUser
      parameters:
        - name: user_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID del usuario para el cual se están obteniendo las reservas.
      responses:
        '200':
          description: Reservas obtenidas satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Reservas obtenidas satisfactoriamente."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "RYA06-1", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "RYA06-2", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Usuario no encontrado.
          content:
            application/json:
              schema:
                default: {code: "RYA06-3", message: "No se encontró el usuario especificado para las reserva."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-21", message: "Error inesperado al tratar de obtener las reservas."}
      security:
        - bearerAuth: []
  /api/reservations/{reservation_uuid}/state:
    patch:
      tags:
        - Reservation
      summary: Actualizar el estado de una reserva existente
      description: Actualiza el estado de una reserva existente identificada por su UUID.
      operationId: cancelReservation
      parameters:
        - name: reservation_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: UUID de la reserva que se desea actualizar.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reservationState:
                  type: string
                  enum: [PENDING, CONFIRMED, CANCELLED, COMPLETED]
                  default: CANCELLED
              required:
                - reservationState
      responses:
        '200':
          description: Estado de reserva actualizado satisfactoriamente.
          content:
            application/json:
              schema:
                type: string
                default: "Reserva cancelada satisfactoriamente."
        '400':
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                default: {code: "RYA04-RYA14-GTR06-1", message: "Error en la solicitud al tratar de actualizar el estado de la reserva."}
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                default: {code: "RYA04-RYA14-GTR06-2", message: "No autorizado para esta acción. (JWT ausente)"}
        '403':
          description: Prohibido
          content:
            application/json:
              schema:
                default: {code: "RYA04-RYA14-GTR06-3", message: "Prohibido para esta acción (JWT inválido o sin permisos)"}
        '404':
          description: Reserva no encontrada.
          content:
            application/json:
              schema:
                default: {code: "RYA04-RYA14-GTR06-4", message: "No se encontró la reserva especificada para actualizar su estado."}
        default:
          description: Error inesperado
          content:
            application/json:
              schema:
                default: {code: "ERRIN-22", message: "Error inesperado al tratar de actualizar el estado de la reserva."}
      security:
        - bearerAuth: []
components:
  schemas:
    UserDTO:
      description: Esquema que representa un usuario para transferencia de datos.
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
          format: number
        password:
          type: string
          format: password
        role:
          type: string
          enum: [ USER, HOST ]
        birthDate:
          type: string
          format: date
      required:
        - name
        - email
        - password
        - role
        - birthDate
    UserLoginDTO:
      description: Esquema que representa las credenciales de inicio de sesión de un usuario.
      type: object
      properties:
        email:
          type: string
          format: email
        phone:
          type: string
        password:
          type: string
          format: password
      required:
        - password
    UserUpdateDTO:
      description: Esquema que representa los datos actualizables de un usuario para transferencia de datos.
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
          format: number
        profilePicture:
          type: string
          format: url
          example: "https://example.com/profile.jpg"
        description:
          type: string
        documents:
          type: array
          items:
            type: string
            format: url
            example: "https://example.com/document.pdf"
    LodgingDTO:
      description: Esquema que representa un alojamiento para transferencia de datos.
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        details:
          type: object
          properties:
            location:
              type: object
              properties:
                city:
                  type: string
                address:
                  type: string
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
            price:
              type: number
              format: float
            services:
              type: array
              items:
                type: string
            pictures:
              type: array
              items:
                type: string
                format: url
                example: "https://example.com/image.jpg"
      required:
        - title
        - description
        - details
    ReservationDTO:
      description: Esquema que representa una reserva para transferencia de datos.
      type: object
      properties:
        lodgingUUID:
          type: string
          format: uuid
        checkIn:
          type: string
          format: date
        checkOut:
          type: string
          format: date
        guests:
          type: integer
          format: int8
      required:
        - lodgingUUID
        - checkIn
        - checkOut
        - guests
    User:
      description: Esquema que representa un usuario en el sistema.
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        name:
          type: string
        role:
          type: string
          enum: [USER, HOST]
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        userDetails:
          type: object
          properties:
            profilePicture:
              type: string
              format: url
              example: "https://example.com/profile.jpg"
            description:
              type: string
            documents:
              type: array
              items:
                type: string
                format: url
                example: "https://example.com/document.pdf"
        comments:
          type: array
          items:
            type: string
            format: uuid
        reservations:
          type: array
          items:
            type: string
            format: uuid
        userState:
          type: string
          enum: [ACTIVE, INACTIVE]
          default: ACTIVE
        creationDate:
          type: string
          format: date-time
      required:
        - UUID
        - role
        - name
        - email
        - password
        - creationDate
    Lodging:
      description: Esquema que representa un alojamiento en el sistema.
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        title:
          type: string
        hostUUID:
          type: string
          format: uuid
        description:
          type: string
        details:   # -> Falta en el diagrama de clases
          type: object
          properties:
            location:
              type: object
              properties:
                city:
                  type: string
                address:
                  type: string
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
            price:
              type: number
              format: float
            services:
              type: array
              items:
                type: string
            maxGuests:
              type: integer
              format: int8
            pictures:
              type: array
              items:
                type: string
                format: url
                example: "https://example.com/image.jpg"
        lodgingState:
          type: string
          enum: [ACTIVE, DELETED]
          default: ACTIVE
        comments:
          type: array
          items:
            type: string
            format: uuid
        reservations:
          type: array
          items:
            type: string
            format: uuid
        creationDate:
          type: string
          format: date-time
      required:
        - UUID
        - title
        - hostUUID
        - description
        - details
        - creationDate
    Reservation:
      description: Esquema que representa una reserva en el sistema.
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        lodgingUUID:
          type: string
          format: uuid
        userUUID:
          type: string
          format: uuid
        checkIn:
          type: string
          format: date
        checkOut:
          type: string
          format: date
        totalPrice:
          type: number
          format: float
        guests:
          type: integer
          format: int8
        reservationState:
          type: string
          enum: [PENDING, CONFIRMED, CANCELLED, COMPLETED]
          default: PENDING
        creationDate:
          type: string
          format: date-time
      required:
        - UUID
        - lodgingUUID
        - userUUID
        - checkIn
        - checkOut
        - totalPrice
        - guests
        - reservationState
        - creationDate
    Comment:
      description: Esquema que representa un comentario en el sistema.
      type: object
      properties:
        UUID:
          type: string
          format: uuid
        comment:
          type: string
          maxLength: 500
        valuation:
          type: integer
          format: float
        creationDate:
          type: string
          format: date-time
        hostResponse:
          type: string
          maxLength: 500
      required:
        - UUID
        - comment
        - valuation
        - creationDate
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT